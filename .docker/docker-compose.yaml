services:
  chatbot_server:
    container_name: "chatbot_server"
    build:
      context: ../
      dockerfile: .docker/Dockerfile
    environment:
      - DB_HOST=${POSTGRES_HOST}  # Matches db service hostname
    ports: 
      - 7000:7000
    volumes:
      - type: bind
        source: "../"
        target: "/chatbot_server"
    command: ["sh", "./scripts/init-dev.sh"]
    networks: 
      - chatbot_dev
    depends_on:
      chatbot_db:
        condition: service_healthy

  chatbot_db:
    hostname: postgres  # Explicit hostname
    image: postgres:15-alpine
    container_name: chatbot_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - chatbot_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:

networks:
  chatbot_dev:
    name: chatbot_dev
    driver: bridge